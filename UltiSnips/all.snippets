# This file contains snippets that are always defined. I personally
# have snippets for signatures and often needed texts

# sligthly lower priority than everything else since specialized versions
# should overwrite. The user needs to adjust her priority in her snippets to
# ~-55 so that other filetypes will still overwrite.
priority -60

##############
# NICE BOXES #
##############
global !p
from vimsnippets import foldmarker, make_box, get_comment_format
endglobal

snippet box "A nice box with the current comment symbol" b
`!p
box = make_box(len(t[1]))
snip.rv = box[0]
snip += box[1]
`${1:${VISUAL:content}}`!p
box = make_box(len(t[1]))
snip.rv = box[2]
snip += box[3]`
$0
endsnippet

snippet bbox "A nice box over the full width" b
`!p
if not snip.c:
	width = int(vim.eval("&textwidth - (virtcol('.') == 1 ? 0 : virtcol('.'))")) or 71
box = make_box(len(t[1]), width)
snip.rv = box[0]
snip += box[1]
`${1:${VISUAL:content}}`!p
box = make_box(len(t[1]), width)
snip.rv = box[2]
snip += box[3]`
$0
endsnippet

snippet fold "Insert a vim fold marker" b
`!p snip.rv = get_comment_format()[0]` ${1:Fold description} `!p snip.rv = foldmarker()[0]`${2:1} `!p snip.rv = get_comment_format()[2]`
endsnippet

snippet foldc "Insert a vim fold close marker" b
`!p snip.rv = get_comment_format()[0]` ${2:1}`!p snip.rv = foldmarker()[1]` `!p snip.rv = get_comment_format()[2]`
endsnippet

snippet foldp "Insert a vim fold marker pair" b
`!p snip.rv = get_comment_format()[0]` ${1:Fold description} `!p snip.rv = foldmarker()[0]` `!p snip.rv = get_comment_format()[2]`
${2:${VISUAL:Content}}
`!p snip.rv = get_comment_format()[0]` `!p snip.rv = foldmarker()[1]` $1 `!p snip.rv = get_comment_format()[2]`
endsnippet

#########
# DATES #
#########
snippet date "YYYY-MM-DD" w
`!v strftime("%Y-%m-%d")`
endsnippet

snippet time "hh:mm" w
`!v strftime("%H:%M")`
endsnippet

snippet dtime "YYYY-MM-DD hh:mm" w
`!v strftime("%Y-%m-%d %H:%M")`
endsnippet

snippet todo "TODO comment" bw
`!p snip.rv=get_comment_format()[0]` ${2:TODO}: $0${3: <${4:`!v strftime('%Y-%m-%d')`}, 崔书豪>} `!p snip.rv=get_comment_format()[2]`
endsnippet

#############
#  gitmoji  #
#############

snippet tada "Initial commit" b
:tada: Initial commit
endsnippet

snippet doc "Writting document" b
:pencil: 
endsnippet

snippet typo "Fixing typos" b
:pencil2: fix typos
endsnippet

snippet license "Adding or updating license" b
:page_facing_up: ${1:add} ${2:MIT} license
endsnippet

snippet gitignore "Adding or updating a .gitignore file" b
:see_no_evil: ${1:update} .gitignore file
endsnippet

snippet arch "Making architectural changes" b
:building_construction: 
endsnippet

snippet merge "Merging branches" b
:twisted_rightwards_arrows: 合并分支
endsnippet

snippet bug "Fixing a bug" b
:bug: 修复${1}的 bug
endsnippet

snippet fea "Introducing new features" b
:sparkles: 
endsnippet

snippet conf "Changing configuration files" b
:wrench: 修改${1}配置文件
endsnippet

snippet ing "working" b
:construction: 
endsnippet

snippet gl "git clone" b
git clone https://github.com/cvuuhk/${0}
endsnippet

# snippet { "brace" A
# {${1}}
# endsnippet

# snippet ( "brace" A
# (${1})
# endsnippet

# snippet " "" A
# "${1}"
# endsnippet
